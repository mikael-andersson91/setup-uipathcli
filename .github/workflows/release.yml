name: Release

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

permissions:
  actions: read
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    outputs:
      new_release_published:
        ${{ steps.semantic-release.outputs.new_release_published }}
      new_release_major_version:
        ${{ steps.semantic-release.outputs.new_release_major_version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 24.2.3
          extra_plugins: |
            @semantic-release/git@10.0.1
            @semantic-release/changelog@6.0.3
            @semantic-release/exec@7.0.2
            conventional-changelog-conventionalcommits@8.0.0

  floating-tag:
    needs: release
    if: ${{ needs.release.outputs.new_release_published == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create floating tag
        uses: 'actions/github-script@v7'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |-
            const sha = process.env.GITHUB_SHA;
            const major = `v${{ needs.release.outputs.new_release_major_version }}`;

            // If exists then update, else create
            try {
            await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: `tags/${major}`,
                sha: sha,
                force: true,
            });
            core.info(`Updated ${major} to ${sha}`);
            } catch(err) {
                core.info(`Failed to update ${major}: ${err}`);
                await github.rest.git.createRef({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: `refs/tags/${major}`,
                    sha: sha,
                });
                core.info(`Created ${major} at ${sha}`);
            }
